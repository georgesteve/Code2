{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Copy of Untitled5.ipynb",
      "version": "0.3.2",
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/georgesteve/Code2/blob/master/3%20y%204%20ta%20de%20IA\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "metadata": {
        "id": "k49o70wmfg_u",
        "colab_type": "code",
        "outputId": "0aca7e2a-9fb2-4d80-edc6-0a58e80efde7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "cell_type": "code",
      "source": [
        "\n",
        "from sklearn.model_selection import train_test_split\n",
        "import pandas as pd\n",
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "# Cargar el Drive helper y mount\n",
        "from google.colab import drive\n",
        "\n",
        "# Link y Codigo de autorizacion.\n",
        "drive.mount('/content/drive_all')\n",
        "\n",
        "# Cargar datos del google drive\n",
        "data = pd.read_csv('/content/drive_all/My Drive/dataset/data/Wine.csv')"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Drive already mounted at /content/drive_all; to attempt to forcibly remount, call drive.mount(\"/content/drive_all\", force_remount=True).\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "rd6ouVWFgSuk",
        "colab_type": "code",
        "outputId": "1fe001a4-c905-4ecc-ba61-25a9692b22e8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1989
        }
      },
      "cell_type": "code",
      "source": [
        "data"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Alcohol</th>\n",
              "      <th>Malic_Acid</th>\n",
              "      <th>Ash</th>\n",
              "      <th>Ash_Alcanity</th>\n",
              "      <th>Magnesium</th>\n",
              "      <th>Total_Phenols</th>\n",
              "      <th>Flavanoids</th>\n",
              "      <th>Nonflavanoid_Phenols</th>\n",
              "      <th>Proanthocyanins</th>\n",
              "      <th>Color_Intensity</th>\n",
              "      <th>Hue</th>\n",
              "      <th>OD280</th>\n",
              "      <th>Proline</th>\n",
              "      <th>Customer_Segment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>14.23</td>\n",
              "      <td>1.71</td>\n",
              "      <td>2.43</td>\n",
              "      <td>15.6</td>\n",
              "      <td>127</td>\n",
              "      <td>2.80</td>\n",
              "      <td>3.06</td>\n",
              "      <td>0.28</td>\n",
              "      <td>2.29</td>\n",
              "      <td>5.640000</td>\n",
              "      <td>1.04</td>\n",
              "      <td>3.92</td>\n",
              "      <td>1065</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>13.20</td>\n",
              "      <td>1.78</td>\n",
              "      <td>2.14</td>\n",
              "      <td>11.2</td>\n",
              "      <td>100</td>\n",
              "      <td>2.65</td>\n",
              "      <td>2.76</td>\n",
              "      <td>0.26</td>\n",
              "      <td>1.28</td>\n",
              "      <td>4.380000</td>\n",
              "      <td>1.05</td>\n",
              "      <td>3.40</td>\n",
              "      <td>1050</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13.16</td>\n",
              "      <td>2.36</td>\n",
              "      <td>2.67</td>\n",
              "      <td>18.6</td>\n",
              "      <td>101</td>\n",
              "      <td>2.80</td>\n",
              "      <td>3.24</td>\n",
              "      <td>0.30</td>\n",
              "      <td>2.81</td>\n",
              "      <td>5.680000</td>\n",
              "      <td>1.03</td>\n",
              "      <td>3.17</td>\n",
              "      <td>1185</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>14.37</td>\n",
              "      <td>1.95</td>\n",
              "      <td>2.50</td>\n",
              "      <td>16.8</td>\n",
              "      <td>113</td>\n",
              "      <td>3.85</td>\n",
              "      <td>3.49</td>\n",
              "      <td>0.24</td>\n",
              "      <td>2.18</td>\n",
              "      <td>7.800000</td>\n",
              "      <td>0.86</td>\n",
              "      <td>3.45</td>\n",
              "      <td>1480</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>13.24</td>\n",
              "      <td>2.59</td>\n",
              "      <td>2.87</td>\n",
              "      <td>21.0</td>\n",
              "      <td>118</td>\n",
              "      <td>2.80</td>\n",
              "      <td>2.69</td>\n",
              "      <td>0.39</td>\n",
              "      <td>1.82</td>\n",
              "      <td>4.320000</td>\n",
              "      <td>1.04</td>\n",
              "      <td>2.93</td>\n",
              "      <td>735</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>14.20</td>\n",
              "      <td>1.76</td>\n",
              "      <td>2.45</td>\n",
              "      <td>15.2</td>\n",
              "      <td>112</td>\n",
              "      <td>3.27</td>\n",
              "      <td>3.39</td>\n",
              "      <td>0.34</td>\n",
              "      <td>1.97</td>\n",
              "      <td>6.750000</td>\n",
              "      <td>1.05</td>\n",
              "      <td>2.85</td>\n",
              "      <td>1450</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>14.39</td>\n",
              "      <td>1.87</td>\n",
              "      <td>2.45</td>\n",
              "      <td>14.6</td>\n",
              "      <td>96</td>\n",
              "      <td>2.50</td>\n",
              "      <td>2.52</td>\n",
              "      <td>0.30</td>\n",
              "      <td>1.98</td>\n",
              "      <td>5.250000</td>\n",
              "      <td>1.02</td>\n",
              "      <td>3.58</td>\n",
              "      <td>1290</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>14.06</td>\n",
              "      <td>2.15</td>\n",
              "      <td>2.61</td>\n",
              "      <td>17.6</td>\n",
              "      <td>121</td>\n",
              "      <td>2.60</td>\n",
              "      <td>2.51</td>\n",
              "      <td>0.31</td>\n",
              "      <td>1.25</td>\n",
              "      <td>5.050000</td>\n",
              "      <td>1.06</td>\n",
              "      <td>3.58</td>\n",
              "      <td>1295</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>14.83</td>\n",
              "      <td>1.64</td>\n",
              "      <td>2.17</td>\n",
              "      <td>14.0</td>\n",
              "      <td>97</td>\n",
              "      <td>2.80</td>\n",
              "      <td>2.98</td>\n",
              "      <td>0.29</td>\n",
              "      <td>1.98</td>\n",
              "      <td>5.200000</td>\n",
              "      <td>1.08</td>\n",
              "      <td>2.85</td>\n",
              "      <td>1045</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>13.86</td>\n",
              "      <td>1.35</td>\n",
              "      <td>2.27</td>\n",
              "      <td>16.0</td>\n",
              "      <td>98</td>\n",
              "      <td>2.98</td>\n",
              "      <td>3.15</td>\n",
              "      <td>0.22</td>\n",
              "      <td>1.85</td>\n",
              "      <td>7.220000</td>\n",
              "      <td>1.01</td>\n",
              "      <td>3.55</td>\n",
              "      <td>1045</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>14.10</td>\n",
              "      <td>2.16</td>\n",
              "      <td>2.30</td>\n",
              "      <td>18.0</td>\n",
              "      <td>105</td>\n",
              "      <td>2.95</td>\n",
              "      <td>3.32</td>\n",
              "      <td>0.22</td>\n",
              "      <td>2.38</td>\n",
              "      <td>5.750000</td>\n",
              "      <td>1.25</td>\n",
              "      <td>3.17</td>\n",
              "      <td>1510</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>14.12</td>\n",
              "      <td>1.48</td>\n",
              "      <td>2.32</td>\n",
              "      <td>16.8</td>\n",
              "      <td>95</td>\n",
              "      <td>2.20</td>\n",
              "      <td>2.43</td>\n",
              "      <td>0.26</td>\n",
              "      <td>1.57</td>\n",
              "      <td>5.000000</td>\n",
              "      <td>1.17</td>\n",
              "      <td>2.82</td>\n",
              "      <td>1280</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>13.75</td>\n",
              "      <td>1.73</td>\n",
              "      <td>2.41</td>\n",
              "      <td>16.0</td>\n",
              "      <td>89</td>\n",
              "      <td>2.60</td>\n",
              "      <td>2.76</td>\n",
              "      <td>0.29</td>\n",
              "      <td>1.81</td>\n",
              "      <td>5.600000</td>\n",
              "      <td>1.15</td>\n",
              "      <td>2.90</td>\n",
              "      <td>1320</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14.75</td>\n",
              "      <td>1.73</td>\n",
              "      <td>2.39</td>\n",
              "      <td>11.4</td>\n",
              "      <td>91</td>\n",
              "      <td>3.10</td>\n",
              "      <td>3.69</td>\n",
              "      <td>0.43</td>\n",
              "      <td>2.81</td>\n",
              "      <td>5.400000</td>\n",
              "      <td>1.25</td>\n",
              "      <td>2.73</td>\n",
              "      <td>1150</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>14.38</td>\n",
              "      <td>1.87</td>\n",
              "      <td>2.38</td>\n",
              "      <td>12.0</td>\n",
              "      <td>102</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.64</td>\n",
              "      <td>0.29</td>\n",
              "      <td>2.96</td>\n",
              "      <td>7.500000</td>\n",
              "      <td>1.20</td>\n",
              "      <td>3.00</td>\n",
              "      <td>1547</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>13.63</td>\n",
              "      <td>1.81</td>\n",
              "      <td>2.70</td>\n",
              "      <td>17.2</td>\n",
              "      <td>112</td>\n",
              "      <td>2.85</td>\n",
              "      <td>2.91</td>\n",
              "      <td>0.30</td>\n",
              "      <td>1.46</td>\n",
              "      <td>7.300000</td>\n",
              "      <td>1.28</td>\n",
              "      <td>2.88</td>\n",
              "      <td>1310</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>14.30</td>\n",
              "      <td>1.92</td>\n",
              "      <td>2.72</td>\n",
              "      <td>20.0</td>\n",
              "      <td>120</td>\n",
              "      <td>2.80</td>\n",
              "      <td>3.14</td>\n",
              "      <td>0.33</td>\n",
              "      <td>1.97</td>\n",
              "      <td>6.200000</td>\n",
              "      <td>1.07</td>\n",
              "      <td>2.65</td>\n",
              "      <td>1280</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>13.83</td>\n",
              "      <td>1.57</td>\n",
              "      <td>2.62</td>\n",
              "      <td>20.0</td>\n",
              "      <td>115</td>\n",
              "      <td>2.95</td>\n",
              "      <td>3.40</td>\n",
              "      <td>0.40</td>\n",
              "      <td>1.72</td>\n",
              "      <td>6.600000</td>\n",
              "      <td>1.13</td>\n",
              "      <td>2.57</td>\n",
              "      <td>1130</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>14.19</td>\n",
              "      <td>1.59</td>\n",
              "      <td>2.48</td>\n",
              "      <td>16.5</td>\n",
              "      <td>108</td>\n",
              "      <td>3.30</td>\n",
              "      <td>3.93</td>\n",
              "      <td>0.32</td>\n",
              "      <td>1.86</td>\n",
              "      <td>8.700000</td>\n",
              "      <td>1.23</td>\n",
              "      <td>2.82</td>\n",
              "      <td>1680</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>13.64</td>\n",
              "      <td>3.10</td>\n",
              "      <td>2.56</td>\n",
              "      <td>15.2</td>\n",
              "      <td>116</td>\n",
              "      <td>2.70</td>\n",
              "      <td>3.03</td>\n",
              "      <td>0.17</td>\n",
              "      <td>1.66</td>\n",
              "      <td>5.100000</td>\n",
              "      <td>0.96</td>\n",
              "      <td>3.36</td>\n",
              "      <td>845</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>14.06</td>\n",
              "      <td>1.63</td>\n",
              "      <td>2.28</td>\n",
              "      <td>16.0</td>\n",
              "      <td>126</td>\n",
              "      <td>3.00</td>\n",
              "      <td>3.17</td>\n",
              "      <td>0.24</td>\n",
              "      <td>2.10</td>\n",
              "      <td>5.650000</td>\n",
              "      <td>1.09</td>\n",
              "      <td>3.71</td>\n",
              "      <td>780</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>12.93</td>\n",
              "      <td>3.80</td>\n",
              "      <td>2.65</td>\n",
              "      <td>18.6</td>\n",
              "      <td>102</td>\n",
              "      <td>2.41</td>\n",
              "      <td>2.41</td>\n",
              "      <td>0.25</td>\n",
              "      <td>1.98</td>\n",
              "      <td>4.500000</td>\n",
              "      <td>1.03</td>\n",
              "      <td>3.52</td>\n",
              "      <td>770</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>13.71</td>\n",
              "      <td>1.86</td>\n",
              "      <td>2.36</td>\n",
              "      <td>16.6</td>\n",
              "      <td>101</td>\n",
              "      <td>2.61</td>\n",
              "      <td>2.88</td>\n",
              "      <td>0.27</td>\n",
              "      <td>1.69</td>\n",
              "      <td>3.800000</td>\n",
              "      <td>1.11</td>\n",
              "      <td>4.00</td>\n",
              "      <td>1035</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>12.85</td>\n",
              "      <td>1.60</td>\n",
              "      <td>2.52</td>\n",
              "      <td>17.8</td>\n",
              "      <td>95</td>\n",
              "      <td>2.48</td>\n",
              "      <td>2.37</td>\n",
              "      <td>0.26</td>\n",
              "      <td>1.46</td>\n",
              "      <td>3.930000</td>\n",
              "      <td>1.09</td>\n",
              "      <td>3.63</td>\n",
              "      <td>1015</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>13.50</td>\n",
              "      <td>1.81</td>\n",
              "      <td>2.61</td>\n",
              "      <td>20.0</td>\n",
              "      <td>96</td>\n",
              "      <td>2.53</td>\n",
              "      <td>2.61</td>\n",
              "      <td>0.28</td>\n",
              "      <td>1.66</td>\n",
              "      <td>3.520000</td>\n",
              "      <td>1.12</td>\n",
              "      <td>3.82</td>\n",
              "      <td>845</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>13.05</td>\n",
              "      <td>2.05</td>\n",
              "      <td>3.22</td>\n",
              "      <td>25.0</td>\n",
              "      <td>124</td>\n",
              "      <td>2.63</td>\n",
              "      <td>2.68</td>\n",
              "      <td>0.47</td>\n",
              "      <td>1.92</td>\n",
              "      <td>3.580000</td>\n",
              "      <td>1.13</td>\n",
              "      <td>3.20</td>\n",
              "      <td>830</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>13.39</td>\n",
              "      <td>1.77</td>\n",
              "      <td>2.62</td>\n",
              "      <td>16.1</td>\n",
              "      <td>93</td>\n",
              "      <td>2.85</td>\n",
              "      <td>2.94</td>\n",
              "      <td>0.34</td>\n",
              "      <td>1.45</td>\n",
              "      <td>4.800000</td>\n",
              "      <td>0.92</td>\n",
              "      <td>3.22</td>\n",
              "      <td>1195</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>13.30</td>\n",
              "      <td>1.72</td>\n",
              "      <td>2.14</td>\n",
              "      <td>17.0</td>\n",
              "      <td>94</td>\n",
              "      <td>2.40</td>\n",
              "      <td>2.19</td>\n",
              "      <td>0.27</td>\n",
              "      <td>1.35</td>\n",
              "      <td>3.950000</td>\n",
              "      <td>1.02</td>\n",
              "      <td>2.77</td>\n",
              "      <td>1285</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>13.87</td>\n",
              "      <td>1.90</td>\n",
              "      <td>2.80</td>\n",
              "      <td>19.4</td>\n",
              "      <td>107</td>\n",
              "      <td>2.95</td>\n",
              "      <td>2.97</td>\n",
              "      <td>0.37</td>\n",
              "      <td>1.76</td>\n",
              "      <td>4.500000</td>\n",
              "      <td>1.25</td>\n",
              "      <td>3.40</td>\n",
              "      <td>915</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>14.02</td>\n",
              "      <td>1.68</td>\n",
              "      <td>2.21</td>\n",
              "      <td>16.0</td>\n",
              "      <td>96</td>\n",
              "      <td>2.65</td>\n",
              "      <td>2.33</td>\n",
              "      <td>0.26</td>\n",
              "      <td>1.98</td>\n",
              "      <td>4.700000</td>\n",
              "      <td>1.04</td>\n",
              "      <td>3.59</td>\n",
              "      <td>1035</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>148</th>\n",
              "      <td>13.32</td>\n",
              "      <td>3.24</td>\n",
              "      <td>2.38</td>\n",
              "      <td>21.5</td>\n",
              "      <td>92</td>\n",
              "      <td>1.93</td>\n",
              "      <td>0.76</td>\n",
              "      <td>0.45</td>\n",
              "      <td>1.25</td>\n",
              "      <td>8.420000</td>\n",
              "      <td>0.55</td>\n",
              "      <td>1.62</td>\n",
              "      <td>650</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>149</th>\n",
              "      <td>13.08</td>\n",
              "      <td>3.90</td>\n",
              "      <td>2.36</td>\n",
              "      <td>21.5</td>\n",
              "      <td>113</td>\n",
              "      <td>1.41</td>\n",
              "      <td>1.39</td>\n",
              "      <td>0.34</td>\n",
              "      <td>1.14</td>\n",
              "      <td>9.400000</td>\n",
              "      <td>0.57</td>\n",
              "      <td>1.33</td>\n",
              "      <td>550</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>150</th>\n",
              "      <td>13.50</td>\n",
              "      <td>3.12</td>\n",
              "      <td>2.62</td>\n",
              "      <td>24.0</td>\n",
              "      <td>123</td>\n",
              "      <td>1.40</td>\n",
              "      <td>1.57</td>\n",
              "      <td>0.22</td>\n",
              "      <td>1.25</td>\n",
              "      <td>8.600000</td>\n",
              "      <td>0.59</td>\n",
              "      <td>1.30</td>\n",
              "      <td>500</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>151</th>\n",
              "      <td>12.79</td>\n",
              "      <td>2.67</td>\n",
              "      <td>2.48</td>\n",
              "      <td>22.0</td>\n",
              "      <td>112</td>\n",
              "      <td>1.48</td>\n",
              "      <td>1.36</td>\n",
              "      <td>0.24</td>\n",
              "      <td>1.26</td>\n",
              "      <td>10.800000</td>\n",
              "      <td>0.48</td>\n",
              "      <td>1.47</td>\n",
              "      <td>480</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>152</th>\n",
              "      <td>13.11</td>\n",
              "      <td>1.90</td>\n",
              "      <td>2.75</td>\n",
              "      <td>25.5</td>\n",
              "      <td>116</td>\n",
              "      <td>2.20</td>\n",
              "      <td>1.28</td>\n",
              "      <td>0.26</td>\n",
              "      <td>1.56</td>\n",
              "      <td>7.100000</td>\n",
              "      <td>0.61</td>\n",
              "      <td>1.33</td>\n",
              "      <td>425</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>153</th>\n",
              "      <td>13.23</td>\n",
              "      <td>3.30</td>\n",
              "      <td>2.28</td>\n",
              "      <td>18.5</td>\n",
              "      <td>98</td>\n",
              "      <td>1.80</td>\n",
              "      <td>0.83</td>\n",
              "      <td>0.61</td>\n",
              "      <td>1.87</td>\n",
              "      <td>10.520000</td>\n",
              "      <td>0.56</td>\n",
              "      <td>1.51</td>\n",
              "      <td>675</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>154</th>\n",
              "      <td>12.58</td>\n",
              "      <td>1.29</td>\n",
              "      <td>2.10</td>\n",
              "      <td>20.0</td>\n",
              "      <td>103</td>\n",
              "      <td>1.48</td>\n",
              "      <td>0.58</td>\n",
              "      <td>0.53</td>\n",
              "      <td>1.40</td>\n",
              "      <td>7.600000</td>\n",
              "      <td>0.58</td>\n",
              "      <td>1.55</td>\n",
              "      <td>640</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>155</th>\n",
              "      <td>13.17</td>\n",
              "      <td>5.19</td>\n",
              "      <td>2.32</td>\n",
              "      <td>22.0</td>\n",
              "      <td>93</td>\n",
              "      <td>1.74</td>\n",
              "      <td>0.63</td>\n",
              "      <td>0.61</td>\n",
              "      <td>1.55</td>\n",
              "      <td>7.900000</td>\n",
              "      <td>0.60</td>\n",
              "      <td>1.48</td>\n",
              "      <td>725</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>156</th>\n",
              "      <td>13.84</td>\n",
              "      <td>4.12</td>\n",
              "      <td>2.38</td>\n",
              "      <td>19.5</td>\n",
              "      <td>89</td>\n",
              "      <td>1.80</td>\n",
              "      <td>0.83</td>\n",
              "      <td>0.48</td>\n",
              "      <td>1.56</td>\n",
              "      <td>9.010000</td>\n",
              "      <td>0.57</td>\n",
              "      <td>1.64</td>\n",
              "      <td>480</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>157</th>\n",
              "      <td>12.45</td>\n",
              "      <td>3.03</td>\n",
              "      <td>2.64</td>\n",
              "      <td>27.0</td>\n",
              "      <td>97</td>\n",
              "      <td>1.90</td>\n",
              "      <td>0.58</td>\n",
              "      <td>0.63</td>\n",
              "      <td>1.14</td>\n",
              "      <td>7.500000</td>\n",
              "      <td>0.67</td>\n",
              "      <td>1.73</td>\n",
              "      <td>880</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>158</th>\n",
              "      <td>14.34</td>\n",
              "      <td>1.68</td>\n",
              "      <td>2.70</td>\n",
              "      <td>25.0</td>\n",
              "      <td>98</td>\n",
              "      <td>2.80</td>\n",
              "      <td>1.31</td>\n",
              "      <td>0.53</td>\n",
              "      <td>2.70</td>\n",
              "      <td>13.000000</td>\n",
              "      <td>0.57</td>\n",
              "      <td>1.96</td>\n",
              "      <td>660</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>159</th>\n",
              "      <td>13.48</td>\n",
              "      <td>1.67</td>\n",
              "      <td>2.64</td>\n",
              "      <td>22.5</td>\n",
              "      <td>89</td>\n",
              "      <td>2.60</td>\n",
              "      <td>1.10</td>\n",
              "      <td>0.52</td>\n",
              "      <td>2.29</td>\n",
              "      <td>11.750000</td>\n",
              "      <td>0.57</td>\n",
              "      <td>1.78</td>\n",
              "      <td>620</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>160</th>\n",
              "      <td>12.36</td>\n",
              "      <td>3.83</td>\n",
              "      <td>2.38</td>\n",
              "      <td>21.0</td>\n",
              "      <td>88</td>\n",
              "      <td>2.30</td>\n",
              "      <td>0.92</td>\n",
              "      <td>0.50</td>\n",
              "      <td>1.04</td>\n",
              "      <td>7.650000</td>\n",
              "      <td>0.56</td>\n",
              "      <td>1.58</td>\n",
              "      <td>520</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>161</th>\n",
              "      <td>13.69</td>\n",
              "      <td>3.26</td>\n",
              "      <td>2.54</td>\n",
              "      <td>20.0</td>\n",
              "      <td>107</td>\n",
              "      <td>1.83</td>\n",
              "      <td>0.56</td>\n",
              "      <td>0.50</td>\n",
              "      <td>0.80</td>\n",
              "      <td>5.880000</td>\n",
              "      <td>0.96</td>\n",
              "      <td>1.82</td>\n",
              "      <td>680</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>162</th>\n",
              "      <td>12.85</td>\n",
              "      <td>3.27</td>\n",
              "      <td>2.58</td>\n",
              "      <td>22.0</td>\n",
              "      <td>106</td>\n",
              "      <td>1.65</td>\n",
              "      <td>0.60</td>\n",
              "      <td>0.60</td>\n",
              "      <td>0.96</td>\n",
              "      <td>5.580000</td>\n",
              "      <td>0.87</td>\n",
              "      <td>2.11</td>\n",
              "      <td>570</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>163</th>\n",
              "      <td>12.96</td>\n",
              "      <td>3.45</td>\n",
              "      <td>2.35</td>\n",
              "      <td>18.5</td>\n",
              "      <td>106</td>\n",
              "      <td>1.39</td>\n",
              "      <td>0.70</td>\n",
              "      <td>0.40</td>\n",
              "      <td>0.94</td>\n",
              "      <td>5.280000</td>\n",
              "      <td>0.68</td>\n",
              "      <td>1.75</td>\n",
              "      <td>675</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>164</th>\n",
              "      <td>13.78</td>\n",
              "      <td>2.76</td>\n",
              "      <td>2.30</td>\n",
              "      <td>22.0</td>\n",
              "      <td>90</td>\n",
              "      <td>1.35</td>\n",
              "      <td>0.68</td>\n",
              "      <td>0.41</td>\n",
              "      <td>1.03</td>\n",
              "      <td>9.580000</td>\n",
              "      <td>0.70</td>\n",
              "      <td>1.68</td>\n",
              "      <td>615</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>165</th>\n",
              "      <td>13.73</td>\n",
              "      <td>4.36</td>\n",
              "      <td>2.26</td>\n",
              "      <td>22.5</td>\n",
              "      <td>88</td>\n",
              "      <td>1.28</td>\n",
              "      <td>0.47</td>\n",
              "      <td>0.52</td>\n",
              "      <td>1.15</td>\n",
              "      <td>6.620000</td>\n",
              "      <td>0.78</td>\n",
              "      <td>1.75</td>\n",
              "      <td>520</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>166</th>\n",
              "      <td>13.45</td>\n",
              "      <td>3.70</td>\n",
              "      <td>2.60</td>\n",
              "      <td>23.0</td>\n",
              "      <td>111</td>\n",
              "      <td>1.70</td>\n",
              "      <td>0.92</td>\n",
              "      <td>0.43</td>\n",
              "      <td>1.46</td>\n",
              "      <td>10.680000</td>\n",
              "      <td>0.85</td>\n",
              "      <td>1.56</td>\n",
              "      <td>695</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>167</th>\n",
              "      <td>12.82</td>\n",
              "      <td>3.37</td>\n",
              "      <td>2.30</td>\n",
              "      <td>19.5</td>\n",
              "      <td>88</td>\n",
              "      <td>1.48</td>\n",
              "      <td>0.66</td>\n",
              "      <td>0.40</td>\n",
              "      <td>0.97</td>\n",
              "      <td>10.260000</td>\n",
              "      <td>0.72</td>\n",
              "      <td>1.75</td>\n",
              "      <td>685</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>168</th>\n",
              "      <td>13.58</td>\n",
              "      <td>2.58</td>\n",
              "      <td>2.69</td>\n",
              "      <td>24.5</td>\n",
              "      <td>105</td>\n",
              "      <td>1.55</td>\n",
              "      <td>0.84</td>\n",
              "      <td>0.39</td>\n",
              "      <td>1.54</td>\n",
              "      <td>8.660000</td>\n",
              "      <td>0.74</td>\n",
              "      <td>1.80</td>\n",
              "      <td>750</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>169</th>\n",
              "      <td>13.40</td>\n",
              "      <td>4.60</td>\n",
              "      <td>2.86</td>\n",
              "      <td>25.0</td>\n",
              "      <td>112</td>\n",
              "      <td>1.98</td>\n",
              "      <td>0.96</td>\n",
              "      <td>0.27</td>\n",
              "      <td>1.11</td>\n",
              "      <td>8.500000</td>\n",
              "      <td>0.67</td>\n",
              "      <td>1.92</td>\n",
              "      <td>630</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>170</th>\n",
              "      <td>12.20</td>\n",
              "      <td>3.03</td>\n",
              "      <td>2.32</td>\n",
              "      <td>19.0</td>\n",
              "      <td>96</td>\n",
              "      <td>1.25</td>\n",
              "      <td>0.49</td>\n",
              "      <td>0.40</td>\n",
              "      <td>0.73</td>\n",
              "      <td>5.500000</td>\n",
              "      <td>0.66</td>\n",
              "      <td>1.83</td>\n",
              "      <td>510</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>171</th>\n",
              "      <td>12.77</td>\n",
              "      <td>2.39</td>\n",
              "      <td>2.28</td>\n",
              "      <td>19.5</td>\n",
              "      <td>86</td>\n",
              "      <td>1.39</td>\n",
              "      <td>0.51</td>\n",
              "      <td>0.48</td>\n",
              "      <td>0.64</td>\n",
              "      <td>9.899999</td>\n",
              "      <td>0.57</td>\n",
              "      <td>1.63</td>\n",
              "      <td>470</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>172</th>\n",
              "      <td>14.16</td>\n",
              "      <td>2.51</td>\n",
              "      <td>2.48</td>\n",
              "      <td>20.0</td>\n",
              "      <td>91</td>\n",
              "      <td>1.68</td>\n",
              "      <td>0.70</td>\n",
              "      <td>0.44</td>\n",
              "      <td>1.24</td>\n",
              "      <td>9.700000</td>\n",
              "      <td>0.62</td>\n",
              "      <td>1.71</td>\n",
              "      <td>660</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>173</th>\n",
              "      <td>13.71</td>\n",
              "      <td>5.65</td>\n",
              "      <td>2.45</td>\n",
              "      <td>20.5</td>\n",
              "      <td>95</td>\n",
              "      <td>1.68</td>\n",
              "      <td>0.61</td>\n",
              "      <td>0.52</td>\n",
              "      <td>1.06</td>\n",
              "      <td>7.700000</td>\n",
              "      <td>0.64</td>\n",
              "      <td>1.74</td>\n",
              "      <td>740</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>174</th>\n",
              "      <td>13.40</td>\n",
              "      <td>3.91</td>\n",
              "      <td>2.48</td>\n",
              "      <td>23.0</td>\n",
              "      <td>102</td>\n",
              "      <td>1.80</td>\n",
              "      <td>0.75</td>\n",
              "      <td>0.43</td>\n",
              "      <td>1.41</td>\n",
              "      <td>7.300000</td>\n",
              "      <td>0.70</td>\n",
              "      <td>1.56</td>\n",
              "      <td>750</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>175</th>\n",
              "      <td>13.27</td>\n",
              "      <td>4.28</td>\n",
              "      <td>2.26</td>\n",
              "      <td>20.0</td>\n",
              "      <td>120</td>\n",
              "      <td>1.59</td>\n",
              "      <td>0.69</td>\n",
              "      <td>0.43</td>\n",
              "      <td>1.35</td>\n",
              "      <td>10.200000</td>\n",
              "      <td>0.59</td>\n",
              "      <td>1.56</td>\n",
              "      <td>835</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>176</th>\n",
              "      <td>13.17</td>\n",
              "      <td>2.59</td>\n",
              "      <td>2.37</td>\n",
              "      <td>20.0</td>\n",
              "      <td>120</td>\n",
              "      <td>1.65</td>\n",
              "      <td>0.68</td>\n",
              "      <td>0.53</td>\n",
              "      <td>1.46</td>\n",
              "      <td>9.300000</td>\n",
              "      <td>0.60</td>\n",
              "      <td>1.62</td>\n",
              "      <td>840</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>177</th>\n",
              "      <td>14.13</td>\n",
              "      <td>4.10</td>\n",
              "      <td>2.74</td>\n",
              "      <td>24.5</td>\n",
              "      <td>96</td>\n",
              "      <td>2.05</td>\n",
              "      <td>0.76</td>\n",
              "      <td>0.56</td>\n",
              "      <td>1.35</td>\n",
              "      <td>9.200000</td>\n",
              "      <td>0.61</td>\n",
              "      <td>1.60</td>\n",
              "      <td>560</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>178 rows × 14 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "     Alcohol  Malic_Acid   Ash  Ash_Alcanity  Magnesium  Total_Phenols  \\\n",
              "0      14.23        1.71  2.43          15.6        127           2.80   \n",
              "1      13.20        1.78  2.14          11.2        100           2.65   \n",
              "2      13.16        2.36  2.67          18.6        101           2.80   \n",
              "3      14.37        1.95  2.50          16.8        113           3.85   \n",
              "4      13.24        2.59  2.87          21.0        118           2.80   \n",
              "5      14.20        1.76  2.45          15.2        112           3.27   \n",
              "6      14.39        1.87  2.45          14.6         96           2.50   \n",
              "7      14.06        2.15  2.61          17.6        121           2.60   \n",
              "8      14.83        1.64  2.17          14.0         97           2.80   \n",
              "9      13.86        1.35  2.27          16.0         98           2.98   \n",
              "10     14.10        2.16  2.30          18.0        105           2.95   \n",
              "11     14.12        1.48  2.32          16.8         95           2.20   \n",
              "12     13.75        1.73  2.41          16.0         89           2.60   \n",
              "13     14.75        1.73  2.39          11.4         91           3.10   \n",
              "14     14.38        1.87  2.38          12.0        102           3.30   \n",
              "15     13.63        1.81  2.70          17.2        112           2.85   \n",
              "16     14.30        1.92  2.72          20.0        120           2.80   \n",
              "17     13.83        1.57  2.62          20.0        115           2.95   \n",
              "18     14.19        1.59  2.48          16.5        108           3.30   \n",
              "19     13.64        3.10  2.56          15.2        116           2.70   \n",
              "20     14.06        1.63  2.28          16.0        126           3.00   \n",
              "21     12.93        3.80  2.65          18.6        102           2.41   \n",
              "22     13.71        1.86  2.36          16.6        101           2.61   \n",
              "23     12.85        1.60  2.52          17.8         95           2.48   \n",
              "24     13.50        1.81  2.61          20.0         96           2.53   \n",
              "25     13.05        2.05  3.22          25.0        124           2.63   \n",
              "26     13.39        1.77  2.62          16.1         93           2.85   \n",
              "27     13.30        1.72  2.14          17.0         94           2.40   \n",
              "28     13.87        1.90  2.80          19.4        107           2.95   \n",
              "29     14.02        1.68  2.21          16.0         96           2.65   \n",
              "..       ...         ...   ...           ...        ...            ...   \n",
              "148    13.32        3.24  2.38          21.5         92           1.93   \n",
              "149    13.08        3.90  2.36          21.5        113           1.41   \n",
              "150    13.50        3.12  2.62          24.0        123           1.40   \n",
              "151    12.79        2.67  2.48          22.0        112           1.48   \n",
              "152    13.11        1.90  2.75          25.5        116           2.20   \n",
              "153    13.23        3.30  2.28          18.5         98           1.80   \n",
              "154    12.58        1.29  2.10          20.0        103           1.48   \n",
              "155    13.17        5.19  2.32          22.0         93           1.74   \n",
              "156    13.84        4.12  2.38          19.5         89           1.80   \n",
              "157    12.45        3.03  2.64          27.0         97           1.90   \n",
              "158    14.34        1.68  2.70          25.0         98           2.80   \n",
              "159    13.48        1.67  2.64          22.5         89           2.60   \n",
              "160    12.36        3.83  2.38          21.0         88           2.30   \n",
              "161    13.69        3.26  2.54          20.0        107           1.83   \n",
              "162    12.85        3.27  2.58          22.0        106           1.65   \n",
              "163    12.96        3.45  2.35          18.5        106           1.39   \n",
              "164    13.78        2.76  2.30          22.0         90           1.35   \n",
              "165    13.73        4.36  2.26          22.5         88           1.28   \n",
              "166    13.45        3.70  2.60          23.0        111           1.70   \n",
              "167    12.82        3.37  2.30          19.5         88           1.48   \n",
              "168    13.58        2.58  2.69          24.5        105           1.55   \n",
              "169    13.40        4.60  2.86          25.0        112           1.98   \n",
              "170    12.20        3.03  2.32          19.0         96           1.25   \n",
              "171    12.77        2.39  2.28          19.5         86           1.39   \n",
              "172    14.16        2.51  2.48          20.0         91           1.68   \n",
              "173    13.71        5.65  2.45          20.5         95           1.68   \n",
              "174    13.40        3.91  2.48          23.0        102           1.80   \n",
              "175    13.27        4.28  2.26          20.0        120           1.59   \n",
              "176    13.17        2.59  2.37          20.0        120           1.65   \n",
              "177    14.13        4.10  2.74          24.5         96           2.05   \n",
              "\n",
              "     Flavanoids  Nonflavanoid_Phenols  Proanthocyanins  Color_Intensity   Hue  \\\n",
              "0          3.06                  0.28             2.29         5.640000  1.04   \n",
              "1          2.76                  0.26             1.28         4.380000  1.05   \n",
              "2          3.24                  0.30             2.81         5.680000  1.03   \n",
              "3          3.49                  0.24             2.18         7.800000  0.86   \n",
              "4          2.69                  0.39             1.82         4.320000  1.04   \n",
              "5          3.39                  0.34             1.97         6.750000  1.05   \n",
              "6          2.52                  0.30             1.98         5.250000  1.02   \n",
              "7          2.51                  0.31             1.25         5.050000  1.06   \n",
              "8          2.98                  0.29             1.98         5.200000  1.08   \n",
              "9          3.15                  0.22             1.85         7.220000  1.01   \n",
              "10         3.32                  0.22             2.38         5.750000  1.25   \n",
              "11         2.43                  0.26             1.57         5.000000  1.17   \n",
              "12         2.76                  0.29             1.81         5.600000  1.15   \n",
              "13         3.69                  0.43             2.81         5.400000  1.25   \n",
              "14         3.64                  0.29             2.96         7.500000  1.20   \n",
              "15         2.91                  0.30             1.46         7.300000  1.28   \n",
              "16         3.14                  0.33             1.97         6.200000  1.07   \n",
              "17         3.40                  0.40             1.72         6.600000  1.13   \n",
              "18         3.93                  0.32             1.86         8.700000  1.23   \n",
              "19         3.03                  0.17             1.66         5.100000  0.96   \n",
              "20         3.17                  0.24             2.10         5.650000  1.09   \n",
              "21         2.41                  0.25             1.98         4.500000  1.03   \n",
              "22         2.88                  0.27             1.69         3.800000  1.11   \n",
              "23         2.37                  0.26             1.46         3.930000  1.09   \n",
              "24         2.61                  0.28             1.66         3.520000  1.12   \n",
              "25         2.68                  0.47             1.92         3.580000  1.13   \n",
              "26         2.94                  0.34             1.45         4.800000  0.92   \n",
              "27         2.19                  0.27             1.35         3.950000  1.02   \n",
              "28         2.97                  0.37             1.76         4.500000  1.25   \n",
              "29         2.33                  0.26             1.98         4.700000  1.04   \n",
              "..          ...                   ...              ...              ...   ...   \n",
              "148        0.76                  0.45             1.25         8.420000  0.55   \n",
              "149        1.39                  0.34             1.14         9.400000  0.57   \n",
              "150        1.57                  0.22             1.25         8.600000  0.59   \n",
              "151        1.36                  0.24             1.26        10.800000  0.48   \n",
              "152        1.28                  0.26             1.56         7.100000  0.61   \n",
              "153        0.83                  0.61             1.87        10.520000  0.56   \n",
              "154        0.58                  0.53             1.40         7.600000  0.58   \n",
              "155        0.63                  0.61             1.55         7.900000  0.60   \n",
              "156        0.83                  0.48             1.56         9.010000  0.57   \n",
              "157        0.58                  0.63             1.14         7.500000  0.67   \n",
              "158        1.31                  0.53             2.70        13.000000  0.57   \n",
              "159        1.10                  0.52             2.29        11.750000  0.57   \n",
              "160        0.92                  0.50             1.04         7.650000  0.56   \n",
              "161        0.56                  0.50             0.80         5.880000  0.96   \n",
              "162        0.60                  0.60             0.96         5.580000  0.87   \n",
              "163        0.70                  0.40             0.94         5.280000  0.68   \n",
              "164        0.68                  0.41             1.03         9.580000  0.70   \n",
              "165        0.47                  0.52             1.15         6.620000  0.78   \n",
              "166        0.92                  0.43             1.46        10.680000  0.85   \n",
              "167        0.66                  0.40             0.97        10.260000  0.72   \n",
              "168        0.84                  0.39             1.54         8.660000  0.74   \n",
              "169        0.96                  0.27             1.11         8.500000  0.67   \n",
              "170        0.49                  0.40             0.73         5.500000  0.66   \n",
              "171        0.51                  0.48             0.64         9.899999  0.57   \n",
              "172        0.70                  0.44             1.24         9.700000  0.62   \n",
              "173        0.61                  0.52             1.06         7.700000  0.64   \n",
              "174        0.75                  0.43             1.41         7.300000  0.70   \n",
              "175        0.69                  0.43             1.35        10.200000  0.59   \n",
              "176        0.68                  0.53             1.46         9.300000  0.60   \n",
              "177        0.76                  0.56             1.35         9.200000  0.61   \n",
              "\n",
              "     OD280  Proline  Customer_Segment  \n",
              "0     3.92     1065                 1  \n",
              "1     3.40     1050                 1  \n",
              "2     3.17     1185                 1  \n",
              "3     3.45     1480                 1  \n",
              "4     2.93      735                 1  \n",
              "5     2.85     1450                 1  \n",
              "6     3.58     1290                 1  \n",
              "7     3.58     1295                 1  \n",
              "8     2.85     1045                 1  \n",
              "9     3.55     1045                 1  \n",
              "10    3.17     1510                 1  \n",
              "11    2.82     1280                 1  \n",
              "12    2.90     1320                 1  \n",
              "13    2.73     1150                 1  \n",
              "14    3.00     1547                 1  \n",
              "15    2.88     1310                 1  \n",
              "16    2.65     1280                 1  \n",
              "17    2.57     1130                 1  \n",
              "18    2.82     1680                 1  \n",
              "19    3.36      845                 1  \n",
              "20    3.71      780                 1  \n",
              "21    3.52      770                 1  \n",
              "22    4.00     1035                 1  \n",
              "23    3.63     1015                 1  \n",
              "24    3.82      845                 1  \n",
              "25    3.20      830                 1  \n",
              "26    3.22     1195                 1  \n",
              "27    2.77     1285                 1  \n",
              "28    3.40      915                 1  \n",
              "29    3.59     1035                 1  \n",
              "..     ...      ...               ...  \n",
              "148   1.62      650                 3  \n",
              "149   1.33      550                 3  \n",
              "150   1.30      500                 3  \n",
              "151   1.47      480                 3  \n",
              "152   1.33      425                 3  \n",
              "153   1.51      675                 3  \n",
              "154   1.55      640                 3  \n",
              "155   1.48      725                 3  \n",
              "156   1.64      480                 3  \n",
              "157   1.73      880                 3  \n",
              "158   1.96      660                 3  \n",
              "159   1.78      620                 3  \n",
              "160   1.58      520                 3  \n",
              "161   1.82      680                 3  \n",
              "162   2.11      570                 3  \n",
              "163   1.75      675                 3  \n",
              "164   1.68      615                 3  \n",
              "165   1.75      520                 3  \n",
              "166   1.56      695                 3  \n",
              "167   1.75      685                 3  \n",
              "168   1.80      750                 3  \n",
              "169   1.92      630                 3  \n",
              "170   1.83      510                 3  \n",
              "171   1.63      470                 3  \n",
              "172   1.71      660                 3  \n",
              "173   1.74      740                 3  \n",
              "174   1.56      750                 3  \n",
              "175   1.56      835                 3  \n",
              "176   1.62      840                 3  \n",
              "177   1.60      560                 3  \n",
              "\n",
              "[178 rows x 14 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 6
        }
      ]
    },
    {
      "metadata": {
        "id": "Bp0X9-fBftl9",
        "colab_type": "code",
        "outputId": "b1392f8b-7246-46dd-b67a-19d46801d2a6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 129
        }
      },
      "cell_type": "code",
      "source": [
        "import csv\n",
        "import random\n",
        "\n",
        "# load irist dataset and randomly split it into test set and training set\n",
        "\n",
        "def loadDataset(filename, split, trainingSet=[] , testSet=[]):\n",
        "\twith open(filename, 'rt') as csvfile:\n",
        "\t    lines = csv.reader(csvfile)\n",
        "\t    dataset = list(lines)\n",
        "\t    for x in range(len(dataset)-1):\n",
        "\t        for y in range(4):\n",
        "\t            dataset[x][y] = float(dataset[x][y])\n",
        "\t        if random.random() < split:\n",
        "\t            trainingSet.append(dataset[x])\n",
        "\t        else:\n",
        "\t            testSet.append(dataset[x])\n",
        "\n",
        "\n",
        "#############################\n",
        "# SIMILARITY CHECK FUNCTION #\n",
        "#############################\n",
        "\n",
        "# euclidean distance calcualtion\n",
        "\n",
        "import math\n",
        "def euclideanDistance(instance1, instance2, length):\n",
        "\tdistance = 0\n",
        "\tfor x in range(length):\n",
        "\t\tdistance += pow((instance1[x] - instance2[x]), 2)\n",
        "\treturn math.sqrt(distance)\n",
        "\n",
        "\n",
        "\n",
        "############################################################\n",
        "# NEIGHBOURS - selecting subset with the smallest distance #\n",
        "############################################################\n",
        "\n",
        "import operator \n",
        "def getNeighbors(trainingSet, testInstance, k):\n",
        "\tdistances = []\n",
        "\tlength = len(testInstance)-1\n",
        "\tfor x in range(len(trainingSet)):\n",
        "\t\tdist = euclideanDistance(testInstance, trainingSet[x], length)\n",
        "\t\tdistances.append((trainingSet[x], dist))\n",
        "\tdistances.sort(key=operator.itemgetter(1))\n",
        "\tneighbors = []\n",
        "\tfor x in range(k):\n",
        "\t\tneighbors.append(distances[x][0])\n",
        "\treturn neighbors\n",
        "\n",
        "\n",
        "\n",
        "######################\n",
        "# PREDICTED RESPONSE #\n",
        "######################\n",
        "\n",
        "import operator\n",
        "def getResponse(neighbors):\n",
        "\tclassVotes = {}\n",
        "\tfor x in range(len(neighbors)):\n",
        "\t\tresponse = neighbors[x][-1]\n",
        "\t\tif response in classVotes:\n",
        "\t\t\tclassVotes[response] += 1\n",
        "\t\telse:\n",
        "\t\t\tclassVotes[response] = 1\n",
        "\tsortedVotes = sorted(classVotes.items(), key=operator.itemgetter(1), reverse=True)\n",
        "\treturn sortedVotes[0][0]\n",
        "\n",
        "\n",
        "\n",
        "######################\n",
        "# MEASURING ACCURACY #\n",
        "######################\n",
        "\n",
        "def getAccuracy(testSet, predictions):\n",
        "\tcorrect = 0\n",
        "\tfor x in range(len(testSet)):\n",
        "\t\tif testSet[x][-1] in predictions[x]: \n",
        "\t\t\tcorrect = correct + 1\n",
        "\t\t\t\n",
        "\treturn (correct/float(len(testSet))*100) \n",
        "\n",
        "def main():\n",
        "\t# prepare data\n",
        "\ttrainingSet=[]\n",
        "\ttestSet=[]\n",
        "\tsplit = 0.67\n",
        "  #data = pd.read_csv('/content/drive_all/My Drive/PYTHON/dataset/polydata2.csv')\n",
        "\t#loadDataset('/content/drive_all/My Drive/PYTHON/dataset/iris.data', split, trainingSet, testSet)\n",
        "  loadDataset(data, split, trainingSet, testSet)\n",
        "\t#print ('Train set: ' + repr(len(trainingSet)))\n",
        "\t#print ('Test set: ' + repr(len(testSet)))\n",
        "\t# generate predictions\n",
        "\tpredictions=[]\n",
        "\tk = 3\n",
        "\tfor x in range(len(testSet)):\n",
        "\t\tneighbors = getNeighbors(trainingSet, testSet[x], k)\n",
        "\t\tresult = getResponse(neighbors)\n",
        "\t\tpredictions.append(result)\n",
        "\t\tprint('> predicted=' + repr(result) + ', actual=' + repr(testSet[x][-1]))\n",
        "\taccuracy = getAccuracy(testSet, predictions)\n",
        "\tprint('Accuracy: ' + repr(accuracy) + '%')\n",
        "\t\n",
        "\n",
        "  \n",
        "main()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "error",
          "ename": "IndentationError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-7-ff8f0c5f7319>\"\u001b[0;36m, line \u001b[0;32m90\u001b[0m\n\u001b[0;31m    loadDataset(data, split, trainingSet, testSet)\u001b[0m\n\u001b[0m                                                  ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unindent does not match any outer indentation level\n"
          ]
        }
      ]
    },
    {
      "metadata": {
        "id": "CT6UA_9jiTu2",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "import mglearn"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "VQq5JD4QitRK",
        "colab_type": "code",
        "outputId": "a7b60530-71d4-4337-ca1a-daad28144da5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 378
        }
      },
      "cell_type": "code",
      "source": [
        "from sklearn.datasets import load_breast_cancer\n",
        "\n",
        "cancer = load_breast_cancer()\n",
        "X_train, X_test, y_train, y_test = train_test_split(\n",
        "    cancer.data, cancer.target, stratify=cancer.target,\n",
        "    random_state=66)\n",
        "# Create training and testing datasets\n",
        "\n",
        "training_accuracy = []\n",
        "test_accuracy = []\n",
        "# try n_neighbors from 1 to 10\n",
        "neighbors_settings = range(1, 11)\n",
        "\n",
        "for n_neighbors in neighbors_settings:\n",
        "    # build the model\n",
        "    clf = KNeighborsClassifier(n_neighbors=n_neighbors)\n",
        "    clf.fit(X_train, y_train)\n",
        "    # record training accuracy\n",
        "    training_accuracy.append(clf.score(X_train, y_train))\n",
        "    # record generalization accuracy\n",
        "    test_accuracy.append(clf.score(X_test, y_test))\n",
        "\n",
        "plt.plot(neighbors_settings,\n",
        "         training_accuracy, label=\"training accuracy\")\n",
        "plt.plot(neighbors_settings,\n",
        "        test_accuracy, label=\"test accuracy\")\n",
        "plt.ylabel(\"Accuracy\")\n",
        "plt.xlabel(\"n_neighbors\")\n",
        "plt.legend()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x7f376bc01048>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 12
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7f376c7e97f0>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "DL1AsV3MjF1F",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "cancer"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "qnn7KZKyj-HC",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 105
        },
        "outputId": "0e08ea82-395f-4e61-a78c-22db62e0596f"
      },
      "cell_type": "code",
      "source": [
        "#iris = datasets.load_iris()\n",
        "#X = data.data[:, [0, 2]]\n",
        "#y = iris.target\n",
        "#a=data ['Color_Intensity']\n",
        "X=data['Alcohol']\n",
        "\n",
        "#X=pd.concat([a,b]) \n",
        "X=X.reshape(-1, 1)\n",
        "y=data['Customer_Segment']\n",
        "y=y.reshape(-1, 1)\n",
        "\n"
      ],
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:4: FutureWarning: reshape is deprecated and will raise in a subsequent release. Please use .values.reshape(...) instead\n",
            "  after removing the cwd from sys.path.\n",
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:6: FutureWarning: reshape is deprecated and will raise in a subsequent release. Please use .values.reshape(...) instead\n",
            "  \n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "metadata": {
        "id": "uy8aGmpRmPm-",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "b"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "fA3MuPpSlku6",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "from itertools import product\n",
        "#http://lijiancheng0614.github.io/scikit-learn/auto_examples/ensemble/plot_voting_decision_regions.html\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "from sklearn import datasets\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "from sklearn.svm import SVC\n",
        "from sklearn.ensemble import VotingClassifier"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "XrVP252NmZUh",
        "colab_type": "code",
        "outputId": "8378f51d-5da3-477c-8b8c-ac04dc93a242",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 122
        }
      },
      "cell_type": "code",
      "source": [
        "clf3 = KNeighborsClassifier(n_neighbors=7)\n",
        "clf3.fit(X, y)"
      ],
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  \n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',\n",
              "           metric_params=None, n_jobs=1, n_neighbors=7, p=2,\n",
              "           weights='uniform')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 19
        }
      ]
    },
    {
      "metadata": {
        "id": "LKf1t04Ym3-K",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "clf1 = DecisionTreeClassifier(max_depth=4)\n",
        "clf1.fit(X, y)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "SpfbXN0JqVmn",
        "colab_type": "code",
        "outputId": "15b40aad-4d6b-4fb2-b09d-b6487bb9aaa7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 768
        }
      },
      "cell_type": "code",
      "source": [
        "import matplotlib\n",
        "matplotlib.use('GTKAgg')\n",
        " \n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from matplotlib.colors import ListedColormap\n",
        "from sklearn import neighbors, datasets\n",
        "n_neighbors = 6\n",
        " \n",
        "\n",
        "h = .02 \n",
        "\n",
        "clf = neighbors.KNeighborsClassifier(n_neighbors, weights='distance')\n",
        "clf.fit(X, y)"
      ],
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:2: UserWarning: \n",
            "This call to matplotlib.use() has no effect because the backend has already\n",
            "been chosen; matplotlib.use() must be called *before* pylab, matplotlib.pyplot,\n",
            "or matplotlib.backends is imported for the first time.\n",
            "\n",
            "The backend was *originally* set to 'module://ipykernel.pylab.backend_inline' by the following code:\n",
            "  File \"/usr/lib/python3.6/runpy.py\", line 193, in _run_module_as_main\n",
            "    \"__main__\", mod_spec)\n",
            "  File \"/usr/lib/python3.6/runpy.py\", line 85, in _run_code\n",
            "    exec(code, run_globals)\n",
            "  File \"/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py\", line 16, in <module>\n",
            "    app.launch_new_instance()\n",
            "  File \"/usr/local/lib/python3.6/dist-packages/traitlets/config/application.py\", line 657, in launch_instance\n",
            "    app.initialize(argv)\n",
            "  File \"<decorator-gen-121>\", line 2, in initialize\n",
            "  File \"/usr/local/lib/python3.6/dist-packages/traitlets/config/application.py\", line 87, in catch_config_error\n",
            "    return method(app, *args, **kwargs)\n",
            "  File \"/usr/local/lib/python3.6/dist-packages/ipykernel/kernelapp.py\", line 462, in initialize\n",
            "    self.init_gui_pylab()\n",
            "  File \"/usr/local/lib/python3.6/dist-packages/ipykernel/kernelapp.py\", line 403, in init_gui_pylab\n",
            "    InteractiveShellApp.init_gui_pylab(self)\n",
            "  File \"/usr/local/lib/python3.6/dist-packages/IPython/core/shellapp.py\", line 213, in init_gui_pylab\n",
            "    r = enable(key)\n",
            "  File \"/usr/local/lib/python3.6/dist-packages/IPython/core/interactiveshell.py\", line 2950, in enable_matplotlib\n",
            "    pt.activate_matplotlib(backend)\n",
            "  File \"/usr/local/lib/python3.6/dist-packages/IPython/core/pylabtools.py\", line 309, in activate_matplotlib\n",
            "    matplotlib.pyplot.switch_backend(backend)\n",
            "  File \"/usr/local/lib/python3.6/dist-packages/matplotlib/pyplot.py\", line 232, in switch_backend\n",
            "    matplotlib.use(newbackend, warn=False, force=True)\n",
            "  File \"/usr/local/lib/python3.6/dist-packages/matplotlib/__init__.py\", line 1305, in use\n",
            "    reload(sys.modules['matplotlib.backends'])\n",
            "  File \"/usr/lib/python3.6/importlib/__init__.py\", line 166, in reload\n",
            "    _bootstrap._exec(spec, module)\n",
            "  File \"/usr/local/lib/python3.6/dist-packages/matplotlib/backends/__init__.py\", line 14, in <module>\n",
            "    line for line in traceback.format_stack()\n",
            "\n",
            "\n",
            "  \n",
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:14: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  \n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',\n",
              "           metric_params=None, n_jobs=1, n_neighbors=6, p=2,\n",
              "           weights='distance')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 20
        }
      ]
    },
    {
      "metadata": {
        "id": "zpEZeBx76SdZ",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 531
        },
        "outputId": "78b25053-9a9b-4ee4-e122-7be81fde2416"
      },
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score\n",
        "\n",
        "\n",
        "\n",
        "ac_train=np.array([])\n",
        "n_c=np.array([])\n",
        "m_d=np.array([])\n",
        "ac_test=np.array([])\n",
        "for k in range(15):\n",
        "    k1=k+1\n",
        "    dt =neighbors.KNeighborsClassifier(k1 , weights='distance')\n",
        "    dt = dt.fit(X, y)\n",
        "  \n",
        "    y_pred=dt.predict(X)\n",
        "    \n",
        "    ac_tr=accuracy_score(y, y_pred)\n",
        "    \n",
        "    \n",
        "    ac_train=np.insert(ac_train,k,ac_tr)\n",
        "\n",
        "%matplotlib inline\n",
        "\n",
        "\n",
        "def gengraf(vc, i, label):\n",
        "    k=np.array(range(i))\n",
        "    k=k+1\n",
        "    vc=pd.DataFrame(vc,columns=[label])\n",
        "    k=pd.DataFrame(k,columns=['K'])\n",
        "    return vc\n",
        "  \n",
        "ac_train=gengraf(ac_train,30,'Presición_Train')\n",
        "\n",
        "\n",
        "sns.set_context('talk')\n",
        "sns.set_palette('dark')\n",
        "sns.set_style('white')\n",
        "\n",
        "ax = ac_train.plot(marker='o')\n",
        "ax.set(xlabel='Profundidad ',\n",
        "       ylabel='Precisión ',\n",
        "       title='Profundidad vs Precisión');"
      ],
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:15: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
            "  from ipykernel import kernelapp as app\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAo4AAAHMCAYAAABbdikaAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMS4yLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvNQv5yAAAIABJREFUeJzs3Xl4VOX9/vF7sk02wi4QEuNQIFCs\nSkUhCEWWaFgqsksRolgFQipoKyD4K7JE0RIoIhSILMWvihYU0RQwgMaCbG2xKBj2AJMAQcOahQlk\nfn/EGRlDYBLILMn7dV29rvTMyTmfE9Jy83zO8zwGq9VqFQAAAHADPu4uAAAAAN6B4AgAAACnEBwB\nAADgFIIjAAAAnEJwBAAAgFMIjgAAAHAKwRFAhQ0dOlTR0dEO/2nTpo1GjhypAwcO3PT1LRaLRo0a\npXvuuUeTJ0++BRWXrXfv3powYYIk6cMPP1R0dLTOnz9f5vkJCQkaOnToTd1z2bJlio6OvqlrlMf2\n7dtL/Xm1atVKDz/8sFJSUlRcXFyp9587d67atGnj1Llms1nR0dHasGFDqc8OHz6se++9V/PmzbvV\nJQK4AT93FwDAu3Xs2FGvvvqqJKm4uFjHjh3TrFmz9OSTT2rt2rWqUaNGha+9efNmbdq0SbNmzVL7\n9u1vVck31KNHD3Xs2PGmavdky5YtU9OmTSVJFy9eVHp6umbOnClJevrppyvtvsOHD9fvfvc7p85t\n1KiRNm/erJo1azocz8/P1/jx45WUlKS4uLjKKBPAdRAcAdyUgIAA1a9f3/7fGzRooLlz56pDhw5a\nu3atBg4cWOFrnzt3TlJJOA0LC7vpWp0VGBiowMBAl93P1WrVqmX/M6tfv75MJpMyMzO1fPnySg2O\nISEhCgkJcepcX19fh98rm4KCAs2aNUuRkZG3ujwATqBVDeCWq1evnurUqaOsrCxJ0oQJE/TUU09p\n9uzZat26tb788ktJ0u7duzV06FDdfffdat26tZ566int379fUklb09Y6vu+++zRhwoRrtpC/++47\nRUdHa/v27Q73SktL08MPP6x77rlHjz32mA4dOmT/nmPHjmnIkCH61a9+pW7duunTTz91qP/n98nN\nzdXIkSN11113qWPHjlq2bFmpZ966dasee+wx3XXXXWrTpo2GDx/u0K4vLi7Wq6++qvvuu0/33nuv\nXnrpJVksljJ/hu+++65atWpVql0+b948tWnTRhaLRUePHtXIkSPVtm1b3X333erTp881W7vOaN68\nuXJyclRUVGRvE69evVrdu3fXY489Jkm6cuWK3nzzTcXFxemuu+5S9+7dtXr1aofrHDt2TCNGjFDr\n1q3VoUMHTZ48WXl5eZJKt6q3bNmiAQMGqHXr1mrTpo2eeuopHTx4UNK1W9Uff/yxhg0bpu7du6td\nu3Z68cUX7f+4kGSveerUqbr//vvVrl07TZ48WZcvX67QzwRAaQRHALfcxYsXdfbsWTVu3Nh+LDMz\nU2azWZ988onatGmjkydP6oknnlCjRo20cuVKvfvuuyouLtaTTz6pCxcuaPjw4Zo4caIkad26dZo0\naZLT98/MzNSqVas0Z84cLV++XDk5OUpKSrJ/PnbsWJ07d07vvPOO3nzzTa1Zs0YnT54s83qTJ0/W\nnj17tGjRIi1dulR79+7V119/bf/8zJkzGjFihKKjo5WamqoVK1bI399fiYmJsu3q+s477+idd97R\n+PHjtWrVKjVp0kTLly8v854PPfSQiouLlZ6e7nA8LS1N3bp1U0BAgMaPH69Lly5p+fLl+vTTT/Xw\nww/r2WefldlsdvpnZWM2m3XbbbfJ39/ffmzx4sWaNGmS3njjDUnSG2+8obfeekvPPPOM1qxZowED\nBujFF1/UF198IalkNHD48OHy9/fXihUr9MYbb+irr77S1KlTS93v3LlzGj16tNq0aaM1a9bovffe\nU40aNZSQkKBr7YS7ceNGjR8/XgMGDFBqaqpmzZql7du36/nnn3c4b9GiRbr99tu1cuVKjR07VitW\nrNDatWvL/fMAcG20qgHcUj/88INeeeUV1axZUw8//LD9+IkTJ7Ry5UrVrl1bkrR06VL5+Pho2rRp\nMhqNkqSZM2eqQ4cOSktLU9++fe3vGNatW7dc7xueOnVK//jHP1SnTh1JUq9evbRixQpJ0qFDh7Rn\nzx4tXLhQd911lyRpxowZeuCBB655rby8PG3atEkTJ05Uu3btJElJSUnq0KGD/ZzQ0FCtXr1aDRs2\nVHBwsCRpyJAhevrpp5Wdna3GjRvrk08+UZcuXdS/f39JJe/77dixQ59//vk171uvXj21adNGGzdu\n1G9/+1tJ0vHjx/Xdd9/Zw9L+/fuVkJBgn2AzcuRI3X///apVq5bTP6vLly9r27Ztev/99/XUU085\n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\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7fe88c3b2940>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    }
  ]
}